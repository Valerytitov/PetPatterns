# ЭТАП 1: Сборщик Valentina
FROM ubuntu:22.04 AS builder

ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get update \
    && apt-get upgrade -y \
    && apt-get install -y --no-install-recommends \
        build-essential \
        git \
        cmake \
        pkg-config \
        qtbase5-dev \
        libqt5svg5-dev \
        qttools5-dev \
        qttools5-dev-tools \
        libqt5xmlpatterns5-dev \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

COPY valentina-src/ /src/
WORKDIR /src
RUN mkdir build && cd build && qmake ../Valentina.pro -r "CONFIG+=noTests noRunPath no_ccache noDebugSymbols" && make -j$(nproc)

# ЭТАП 2: Composer для PHP-зависимостей (production)
FROM composer:2 AS composer
WORKDIR /app
COPY composer.json composer.lock ./
RUN composer install --no-dev --prefer-dist --optimize-autoloader

# ЭТАП 3: Финальный образ (production)
FROM php:8.2-fpm

RUN apt-get update \
    && apt-get upgrade -y \
    && apt-get install -y --no-install-recommends \
        libqt5core5a \
        libqt5gui5 \
        libqt5widgets5 \
        libqt5xml5 \
        libqt5svg5 \
        libqt5printsupport5 \
        libqt5xmlpatterns5 \
        libqt5concurrent5 \
        poppler-utils \
        pdfposter \
        unzip \
        libonig-dev \
        libzip-dev \
        libfreetype6-dev \
        libjpeg62-turbo-dev \
        libpng-dev \
        xvfb \
        xauth \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

COPY --from=builder /src/build/src/app/valentina/bin/valentina /usr/local/bin/valentina
COPY --from=builder /src/build/src/libs/vpropertyexplorer/bin/libvpropertyexplorer.so* /usr/local/lib/
COPY --from=builder /src/build/src/libs/qmuparser/bin/libqmuparser.so* /usr/local/lib/

RUN ldconfig && chmod +x /usr/local/bin/valentina

ENV XDG_RUNTIME_DIR=/tmp/runtime-www-data
RUN mkdir -p /tmp/runtime-www-data && chmod 700 /tmp/runtime-www-data && chown www-data:www-data /tmp/runtime-www-data

RUN docker-php-ext-configure gd --with-freetype --with-jpeg \
    && docker-php-ext-install -j$(nproc) gd pdo_mysql mbstring zip exif pcntl

WORKDIR /var/www

COPY . .
COPY --from=composer /app/vendor ./vendor

# Production-оптимизация Laravel
RUN php artisan config:cache \
    && php artisan route:cache \
    && php artisan view:cache

USER www-data 